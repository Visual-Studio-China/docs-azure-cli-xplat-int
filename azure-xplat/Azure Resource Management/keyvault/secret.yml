### YamlMime:AzureXplatCli
commands:
- name: list
  description: Lists secrets of a vault
  usage: '[options] <vault-name>'
  filePath: commands/arm/keyvault/keyvault.secret._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -u, --vault-name <vault-name>
    required: -18
    optional: 0
    bool: True
    short: -u
    long: --vault-name
    description: the vault name
- name: list-versions
  description: Lists secret versions
  usage: '[options] <vault-name> [secret-name]'
  filePath: commands/arm/keyvault/keyvault.secret._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -u, --vault-name <vault-name>
    required: -18
    optional: 0
    bool: True
    short: -u
    long: --vault-name
    description: the vault name
  - flags: -s, --secret-name <secret-name>
    required: -19
    optional: 0
    bool: True
    short: -s
    long: --secret-name
    description: lists only versions of this secret
- name: set
  description: Stores a secret on the vault
  usage: options <vault-name> <secret-name>
  filePath: commands/arm/keyvault/keyvault.secret._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -u, --vault-name <vault-name>
    required: -18
    optional: 0
    bool: True
    short: -u
    long: --vault-name
    description: the vault name
  - flags: -s, --secret-name <secret-name>
    required: -19
    optional: 0
    bool: True
    short: -s
    long: --secret-name
    description: name of the secret to be created; if already exists, a new secret version is created
  - flags: -w, --value <secret-value>
    required: -13
    optional: 0
    bool: True
    short: -w
    long: --value
    description: the secret value to be uploaded, expressed as an arbitrary sequence of characters; cannot be used along with --json-value or --file flags
  - flags: --json-value <JSON-string>
    required: -14
    optional: 0
    bool: True
    long: --json-value
    description: the secret value to be uploaded, expressed as a JSON string; cannot be used along with --value or --file flags
  - flags: --file <file-name>
    required: -8
    optional: 0
    bool: True
    long: --file
    description: the file that contains the secret value to be uploaded; cannot be used along with the --value or --json-value flag
  - flags: --file-encoding <encoding>
    required: -17
    optional: 0
    bool: True
    long: --file-encoding
    description: 'for text files, specifies encoding used on the file; valid values: [utf8, utf16le, ucs2, ascii]; default is utf8'
  - flags: --encode-binary <encoding>
    required: -17
    optional: 0
    bool: True
    long: --encode-binary
    description: 'tells the file is binary and encodes it before uploading; valid values: [base64, hex]'
  - flags: -c, --content-type <content-type>
    required: -20
    optional: 0
    bool: True
    short: -c
    long: --content-type
    description: the content type
  - flags: --enabled <boolean>
    required: -11
    optional: 0
    bool: True
    long: --enabled
    description: 'tells if the secret should be enabled; valid values: [false, true]; default is true'
  - flags: -e, --expires <datetime>
    required: -15
    optional: 0
    bool: True
    short: -e
    long: --expires
    description: expiration time of secret, expressed in RFC-1123/ISO8601 date format
  - flags: -n, --not-before <datetime>
    required: -18
    optional: 0
    bool: True
    short: -n
    long: --not-before
    description: time before which secret cannot be used, expressed in RFC-1123/ISO8601 date format
  - flags: -t, --tags <tags>
    required: -12
    optional: 0
    bool: True
    short: -t
    long: --tags
    description: Tags to set on the secret. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2
- name: set-attributes
  description: Changes attributes of an existing secret
  usage: '[options] <vault-name> <secret-name> [secret-version]'
  filePath: commands/arm/keyvault/keyvault.secret._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -u, --vault-name <vault-name>
    required: -18
    optional: 0
    bool: True
    short: -u
    long: --vault-name
    description: the vault name
  - flags: -s, --secret-name <secret-name>
    required: -19
    optional: 0
    bool: True
    short: -s
    long: --secret-name
    description: name of the secret to be modified
  - flags: -r, --secret-version <secret-version>
    required: -22
    optional: 0
    bool: True
    short: -r
    long: --secret-version
    description: the version to be modified; if omited, modifies only the most recent
  - flags: -c, --content-type <content-type>
    required: -20
    optional: 0
    bool: True
    short: -c
    long: --content-type
    description: the content type
  - flags: --enabled <boolean>
    required: -11
    optional: 0
    bool: True
    long: --enabled
    description: 'if informed, command will change the enabled state; valid values: [false, true]'
  - flags: -e, --expires <datetime>
    required: -15
    optional: 0
    bool: True
    short: -e
    long: --expires
    description: if informed, command will change secret expiration time; expressed in RFC-1123/ISO8601 date format, or null to clear the value
  - flags: -n, --not-before <datetime>
    required: -18
    optional: 0
    bool: True
    short: -n
    long: --not-before
    description: if informed, command will change time before which secret cannot be used; expressed in RFC-1123/ISO8601 date format, or null to clear the value
  - flags: -t, --tags <tags>
    required: -12
    optional: 0
    bool: True
    short: -t
    long: --tags
    description: Tags to set on the secret. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2
  - flags: --reset-tags
    required: 0
    optional: 0
    bool: True
    long: --reset-tags
    description: remove previously existing tags; can combined with --tags
- name: show
  description: Shows a vault secret
  usage: '[options] <vault-name> <secret-name> [secret-version]'
  filePath: commands/arm/keyvault/keyvault.secret._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -u, --vault-name <vault-name>
    required: -18
    optional: 0
    bool: True
    short: -u
    long: --vault-name
    description: the vault name
  - flags: -s, --secret-name <secret-name>
    required: -19
    optional: 0
    bool: True
    short: -s
    long: --secret-name
    description: the secret name
  - flags: -r, --secret-version <secret-version>
    required: -22
    optional: 0
    bool: True
    short: -r
    long: --secret-version
    description: the secret version; if omited, uses the most recent
- name: get
  description: Downloads a secret from the vault
  usage: '[options] <vault-name> <secret-name> [secret-version] <file>'
  filePath: commands/arm/keyvault/keyvault.secret._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -u, --vault-name <vault-name>
    required: -18
    optional: 0
    bool: True
    short: -u
    long: --vault-name
    description: the vault name
  - flags: -s, --secret-name <secret-name>
    required: -19
    optional: 0
    bool: True
    short: -s
    long: --secret-name
    description: the secret name
  - flags: -r, --secret-version <secret-version>
    required: -22
    optional: 0
    bool: True
    short: -r
    long: --secret-version
    description: the secret version; if omited, uses the most recent
  - flags: --file <file-name>
    required: -8
    optional: 0
    bool: True
    long: --file
    description: the file to receive secret contents; the file must not exist otherwise the command fails
  - flags: --file-encoding <encoding>
    required: -17
    optional: 0
    bool: True
    long: --file-encoding
    description: 'specifies how to encode the secret contents in the file; valid values: [utf8, utf16le, ucs2, ascii]; default is utf8'
  - flags: --decode-binary <encoding>
    required: -17
    optional: 0
    bool: True
    long: --decode-binary
    description: 'tells to write a binary file by decoding secret contents with the informed encoding; valid values: [base64, hex]'
- name: delete
  description: Deletes a secret from the vault
  usage: '[options] <vault-name> <secret-name>'
  filePath: commands/arm/keyvault/keyvault.secret._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -u, --vault-name <vault-name>
    required: -18
    optional: 0
    bool: True
    short: -u
    long: --vault-name
    description: the vault name
  - flags: -s, --secret-name <secret-name>
    required: -19
    optional: 0
    bool: True
    short: -s
    long: --secret-name
    description: the secret name
  - flags: -q, --quiet
    required: 0
    optional: 0
    bool: True
    short: -q
    long: --quiet
    description: quiet mode (do not ask for delete confirmation)
name: secret
description: Commands to manage secrets in the Azure Key Vault service
usage: '[options] [command]'
Metadata:
  ms.topic: reference
  open_to_public_contributors: true
  content_git_url: https://github.com/Visual-Studio-China/azure-xplat-cli/blob/dev/lib/commands/arm/keyvault/keyvault.secret._js
  original_content_git_url: https://github.com/Visual-Studio-China/azure-xplat-cli/blob/dev/lib/commands/arm/keyvault/keyvault.secret._js
  update_at: 8/31/2016 2:07 AM
  ms.date: 8/31/2016
  gitcommit: https://github.com/Visual-Studio-China/azure-xplat-cli/blob/c5bd2b43182555c2e7fe2c4f67bf8730b27c10d2/lib/commands/arm/keyvault/keyvault.secret._js

