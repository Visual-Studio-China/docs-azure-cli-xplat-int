### YamlMime:AzureXplatCli
commands:
- name: create
  description: adds the specified firewall rule to the specified Data Lake Store account.
  usage: '[options] <accountName> <name> <startIpAddress> <endIpAddress>'
  filePath: commands/arm/datalakestore/datalakestore._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -a --accountName <accountName>
    required: -18
    optional: 0
    bool: True
    short: -a
    long: --accountName
    description: the Data Lake Store account name to execute the action on
  - flags: -n --name <firewall rule name>
    required: -11
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the firewall rule to add
  - flags: -t --startIpAddress <start ip address>
    required: -21
    optional: 0
    bool: True
    short: -t
    long: --startIpAddress
    description: the start of the valid ip range for the firewall rule
  - flags: -e, --endIpAddress <end ip address>
    required: -20
    optional: 0
    bool: True
    short: -e
    long: --endIpAddress
    description: the end of the valid ip range for the firewall rule
  - flags: -g --resource-group <resource-group>
    required: -21
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: optionally explicitly set the resource group. If not specified, will attempt to discover it.
  - flags: -s, --subscription <id>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: set
  description: updates the specified firewall rule in the specified Data Lake Store account.
  usage: '[options] <accountName> <name>'
  filePath: commands/arm/datalakestore/datalakestore._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -a --accountName <accountName>
    required: -18
    optional: 0
    bool: True
    short: -a
    long: --accountName
    description: the Data Lake Store account name to execute the action on
  - flags: -n --name <firewall rule name>
    required: -11
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the firewall rule to update
  - flags: -t --startIpAddress <start ip address>
    required: -21
    optional: 0
    bool: True
    short: -t
    long: --startIpAddress
    description: the optional new start of the valid ip range for the firewall rule
  - flags: -e, --endIpAddress <end ip address>
    required: -20
    optional: 0
    bool: True
    short: -e
    long: --endIpAddress
    description: the optional new end of the valid ip range for the firewall rule
  - flags: -g --resource-group <resource-group>
    required: -21
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: optionally explicitly set the resource group. If not specified, will attempt to discover it.
  - flags: -s, --subscription <id>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: show
  description: retrieves the specified firewall rule in the specified Data Lake Store account.
  usage: '[options] <accountName> <name>'
  filePath: commands/arm/datalakestore/datalakestore._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -a --accountName <accountName>
    required: -18
    optional: 0
    bool: True
    short: -a
    long: --accountName
    description: the Data Lake Store account name to execute the action on
  - flags: -g --resource-group <resource-group>
    required: -21
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: optionally explicitly set the resource group. If not specified, will attempt to discover it.
  - flags: -n --name <firewall rule name>
    required: -11
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the firewall rule to display
  - flags: -s, --subscription <id>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: list
  description: retrieves all firewall rules in the specified Data Lake Store account.
  usage: '[options] <accountName>'
  filePath: commands/arm/datalakestore/datalakestore._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -n --accountName <accountName>
    required: -18
    optional: 0
    bool: True
    short: -n
    long: --accountName
    description: the Data Lake Store account name to execute the action on
  - flags: -g --resource-group <resource-group>
    required: -21
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: optionally explicitly set the resource group. If not specified, will attempt to discover it.
  - flags: -s, --subscription <id>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: delete
  description: removes the specified firewall rule in the specified Data Lake Store account.
  usage: '[options] <accountName> <name>'
  filePath: commands/arm/datalakestore/datalakestore._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -a --accountName <accountName>
    required: -18
    optional: 0
    bool: True
    short: -a
    long: --accountName
    description: the Data Lake Store account name to execute the action on
  - flags: -g --resource-group <resource-group>
    required: -21
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: the optional resource group to list the accounts in
  - flags: -n --name <firewall rule name>
    required: -11
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the firewall rule to delete
  - flags: -q, --quiet
    required: 0
    optional: 0
    bool: True
    short: -q
    long: --quiet
    description: quiet mode (do not ask for delete confirmation)
  - flags: -s, --subscription <id>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
name: firewall
description: Commands to manage your Data Lake Storage account firewall rules
usage: '[options] [command]'
Metadata:
  content_git_url: https://github.com/Visual-Studio-China/azure-xplat-cli/blob/dev/azure-xplat/Azure%20Resource%20Management/datalake/store/firewall.yml
  gitcommit: https://github.com/Visual-Studio-China/azure-xplat-cli/blob//azure-xplat/Azure%20Resource%20Management/datalake/store/firewall.yml
  ms.topic: reference
