### YamlMime:AzureXplatCli
commands:
- name: create
  description: Create an application gateway
  usage: '[options] <resource-group> <name> <location> <servers>'
  filePath: commands/arm/network/network._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -g, --resource-group <resource-group>
    required: -22
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: the name of the resource group
  - flags: -n, --name <name>
    required: -12
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the application gateway
  - flags: -l, --location <location>
    required: -16
    optional: 0
    bool: True
    short: -l
    long: --location
    description: the location
  - flags: -e, --vnet-name [vnet-name]
    required: 0
    optional: -17
    bool: True
    short: -e
    long: --vnet-name
    description: the name of the virtual network application gateway should be deployed in
  - flags: -m, --subnet-name [subnet-name]
    required: 0
    optional: -19
    bool: True
    short: -m
    long: --subnet-name
    description: the name of subnet in the virtual network identified by --vnet-name
  - flags: -d, --subnet-id [subnet-id]
    required: 0
    optional: -17
    bool: True
    short: -d
    long: --subnet-id
    description: >-
      the subnet identifier.
           e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/VirtualNetworks/<vnet-name>/subnets/<subnet-name>
  - flags: -y, --cert-file [cert-file]
    required: 0
    optional: -17
    bool: True
    short: -y
    long: --cert-file
    description: the path to the certificate
  - flags: -x, --cert-password [cert-password]
    required: 0
    optional: -21
    bool: True
    short: -x
    long: --cert-password
    description: the certificate password
  - flags: -A, --address-pool-name [address-pool-name]
    required: 0
    optional: -25
    bool: True
    short: -A
    long: --address-pool-name
    description: "the address pool name. \n     Default value is \"pool01\""
  - flags: -r, --servers <servers>
    required: -15
    optional: 0
    bool: True
    short: -r
    long: --servers
    description: comma separated list of IP addresses or DNS names corresponding to backend servers
  - flags: -O, --http-settings-name [http-settings-name]
    required: 0
    optional: -26
    bool: True
    short: -O
    long: --http-settings-name
    description: "the HTTP settings name. \n     Default value is \"httpSettings01\""
  - flags: -i, --http-settings-protocol [http-settings-protocol]
    required: 0
    optional: -30
    bool: True
    short: -i
    long: --http-settings-protocol
    description: the HTTP settings protocol, valid values are [http]
  - flags: -o, --http-settings-port [http-settings-port]
    required: 0
    optional: -26
    bool: True
    short: -o
    long: --http-settings-port
    description: the HTTP settings port, valid range is [0-65535]
  - flags: -f, --http-settings-cookie-based-affinity [http-settings-cookie-based-affinity]
    required: 0
    optional: -43
    bool: True
    short: -f
    long: --http-settings-cookie-based-affinity
    description: >-
      Enable or disable HTTP settings cookie based affinity, valid values are
           [Disabled,Enabled],
           default value is "Disabled"
  - flags: -J, --frontend-port-name [frontend-port-name]
    required: 0
    optional: -26
    bool: True
    short: -J
    long: --frontend-port-name
    description: >-
      the frontend port name.
           Default value is "frontendPort01"
  - flags: -j, --frontend-port [frontend-port]
    required: 0
    optional: -21
    bool: True
    short: -j
    long: --frontend-port
    description: the frontend port value, valid range is [0-65535]
  - flags: -F, --frontend-ip-name [frontend-ip-name]
    required: 0
    optional: -24
    bool: True
    short: -F
    long: --frontend-ip-name
    description: "the frontend ip name. \n     Default value is \"frontendIp01\""
  - flags: -k, --public-ip-name [public-ip-name]
    required: 0
    optional: -22
    bool: True
    short: -k
    long: --public-ip-name
    description: the name of the public ip
  - flags: -p, --public-ip-id [public-ip-id]
    required: 0
    optional: -20
    bool: True
    short: -p
    long: --public-ip-id
    description: >-
      the public ip identifier.
           e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/publicIPAddresses/<public-ip-name>
  - flags: -G, --gateway-ip-name [gateway-ip-name]
    required: 0
    optional: -23
    bool: True
    short: -G
    long: --gateway-ip-name
    description: >-
      the gateway ip name.
           Default value is "ipConfig01"
  - flags: -L, --http-listener-name [http-listener-name]
    required: 0
    optional: -26
    bool: True
    short: -L
    long: --http-listener-name
    description: >-
      the HTTP listener name.
           Default value is "listener01"
  - flags: -b, --http-listener-protocol [http-listener-protocol]
    required: 0
    optional: -30
    bool: True
    short: -b
    long: --http-listener-protocol
    description: the HTTP listener protocol, valid values are [http,https]
  - flags: -R, --routing-rule-name [routing-rule-name]
    required: 0
    optional: -25
    bool: True
    short: -R
    long: --routing-rule-name
    description: >-
      the routing rule name.
           Default name is "rule01"
  - flags: -w, --routing-rule-type [routing-rule-type]
    required: 0
    optional: -25
    bool: True
    short: -w
    long: --routing-rule-type
    description: the request routing rule type, default is "Basic"
  - flags: -a, --sku-name [sku-name]
    required: 0
    optional: -16
    bool: True
    short: -a
    long: --sku-name
    description: the name of the sku, valid values are [Standard_Medium,Standard_Small,Standard_Large,WAF_Medium,WAF_Large]. Default values is "Standard_Medium"
  - flags: -u, --sku-tier [sku-tier]
    required: 0
    optional: -16
    bool: True
    short: -u
    long: --sku-tier
    description: the sku tier, valid values are [undefined]. Default values is "Standard"
  - flags: -z, --capacity [capacity]
    required: 0
    optional: -16
    bool: True
    short: -z
    long: --capacity
    description: application gateway instance count in range [2,10]. Default value is 2.
  - flags: -t, --tags [tags]
    required: 0
    optional: -12
    bool: True
    short: -t
    long: --tags
    description: >-
      the list of tags.
           Can be multiple. In the format of "name=value".
           Name is required and value is optional.
           For example, -t "tag1=value1;tag2"
  - flags: --nowait
    required: 0
    optional: 0
    bool: True
    long: --nowait
    description: does not wait for the operation to complete. Returns as soon as the intial request is received by the server.
  - flags: -s, --subscription <subscription>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: set
  description: Set an application gateway
  usage: '[options] <resource-group> <name>'
  filePath: commands/arm/network/network._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -g, --resource-group <resource-group>
    required: -22
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: the name of the resource group
  - flags: -n, --name <name>
    required: -12
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the application gateway
  - flags: -a, --sku-name [sku-name]
    required: 0
    optional: -16
    bool: True
    short: -a
    long: --sku-name
    description: the name of the sku, valid values are [Standard_Medium,Standard_Small,Standard_Large,WAF_Medium,WAF_Large]
  - flags: -u, --sku-tier [sku-tier]
    required: 0
    optional: -16
    bool: True
    short: -u
    long: --sku-tier
    description: the sku tier, valid values are [Standard,WAF]
  - flags: -z, --capacity [capacity]
    required: 0
    optional: -16
    bool: True
    short: -z
    long: --capacity
    description: application gateway instance count in range [2,10]
  - flags: -t, --tags [tags]
    required: 0
    optional: -12
    bool: True
    short: -t
    long: --tags
    description: >-
      the list of tags.
           Can be multiple. In the format of "name=value".
           Name is required and value is optional.
           Existing tag values will be replaced by the values specified.
           For example, -t "tag1=value1;tag2"
  - flags: --nowait
    required: 0
    optional: 0
    bool: True
    long: --nowait
    description: does not wait for the operation to complete. Returns as soon as the intial request is received by the server.
  - flags: -s, --subscription <subscription>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: show
  description: Show application gateway
  usage: '[options] <resource-group> <name>'
  filePath: commands/arm/network/network._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -g, --resource-group <resource-group>
    required: -22
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: the name of the resource group
  - flags: -n, --name <name>
    required: -12
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the application gateway
  - flags: -s, --subscription <subscription>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: list
  description: List application gateways
  usage: '[options] [resource-group]'
  filePath: commands/arm/network/network._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -g, --resource-group [resource-group]
    required: 0
    optional: -22
    bool: True
    short: -g
    long: --resource-group
    description: the name of the resource group
  - flags: -s, --subscription <subscription>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: delete
  description: Delete application gateway
  usage: '[options] <resource-group> <name>'
  filePath: commands/arm/network/network._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -g, --resource-group <resource-group>
    required: -22
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: the name of the resource group
  - flags: -n, --name <name>
    required: -12
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the application gateway
  - flags: -q, --quiet
    required: 0
    optional: 0
    bool: True
    short: -q
    long: --quiet
    description: quiet mode, do not ask for unregister confirmation
  - flags: --nowait
    required: 0
    optional: 0
    bool: True
    long: --nowait
    description: does not wait for the operation to complete. Returns as soon as the intial request is received by the server.
  - flags: -s, --subscription <subscription>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: start
  description: Start application gateway
  usage: '[options] <resource-group> <name>'
  filePath: commands/arm/network/network._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -g, --resource-group <resource-group>
    required: -22
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: the name of the resource group
  - flags: -n, --name <name>
    required: -12
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the application gateway
  - flags: -s, --subscription <subscription>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
- name: stop
  description: Stop application gateway
  usage: '[options] <resource-group> <name>'
  filePath: commands/arm/network/network._js
  options:
  - flags: -v, --verbose
    required: 0
    optional: 0
    bool: True
    short: -v
    long: --verbose
    description: use verbose output
  - flags: -vv
    required: 0
    optional: 0
    bool: True
    long: -vv
    description: more verbose with debug output
  - flags: --json
    required: 0
    optional: 0
    bool: True
    long: --json
    description: use json output
  - flags: -g, --resource-group <resource-group>
    required: -22
    optional: 0
    bool: True
    short: -g
    long: --resource-group
    description: the name of the resource group
  - flags: -n, --name <name>
    required: -12
    optional: 0
    bool: True
    short: -n
    long: --name
    description: the name of the application gateway
  - flags: -s, --subscription <subscription>
    required: -20
    optional: 0
    bool: True
    short: -s
    long: --subscription
    description: the subscription identifier
metadata:
  update_at: 12/30/2016 7:23 AM
  git_content_url: https://github.com/azure/azure-xplat-cli/lib/commands/arm/network/network._js  original_git_content_url: https://github.com/azure/azure-xplat-cli/lib/commands/arm/network/network._js  gitcommit: https://github.com/azure/azure-xplat-cli/lib/commands/arm/network/network._js  open_to_public_contributors: true
  ms.date: 12/30/2016
  ms.topic: reference
name: application-gateway
description: Commands to manage application gateways
usage: '[options] [command]'
